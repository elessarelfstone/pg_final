- name: Install PostgreSql and Patroni
  hosts: patroni
  become: true

  vars:
    pg_version: 14
    patroni_etc_directory: /etc/patroni
    patroni_user: postgres

  tasks:
    # - name: Rep file for Postgresql
    #   ansible.builtin.lineinfile:
    #     path: /etc/apt/sources.list.d/pgdg.list
    #     line: echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
    #     state: present
    #     create: True
    #     insertafter: EOF

    - name: Add PostgreSQL APT repository
      ansible.builtin.shell : echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
      args:
        creates: /etc/apt/sources.list.d/pgdg.list
  
    - name: Repository signing key
      ansible.builtin.shell: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

    # - name: Install Postrgresql
    #   ansible.builtin.shell: apt-get update && sudo apt-get -y install postgresql-{{ pg_version }}
    
    - name: Install Postrgresql
      ansible.builtin.apt:
        name: postgresql-{{ pg_version }}
        state: present
        update_cache: yes
    
    - name: Stop service cron on debian, if running
      ansible.builtin.systemd:
        name: postgresql
        state: stopped
        enabled: no

    - name: Install Patroni Dependencies
      ansible.builtin.apt:
        pkg:
          - python3-pip
          - python3-dev
          - libpq-dev
        state: present

    - name: Install Pip Patroni Dependencies
      pip:
        name: psycopg2-binary
    
    - name: Install Patroni 
      pip:
        name: patroni[etcd]
    
    - name: "Create directory for Patroni config"
      ansible.builtin.file:
        path: '{{ patroni_etc_directory }}'
        state: directory
        owner: '{{ patroni_user }}'
        group: '{{ patroni_user }}'
        mode: 0775

    - name: "Create Patroni config"
      ansible.builtin.template: 
        src: patroni.yml.j2
        dest: "{{ patroni_etc_directory }}/patroni.yml"
        owner: "{{ patroni_user }}"
        group: "{{ patroni_user }}"
        mode: 0600
    
    - name: Create Patroni service
      ansible.builtin.template: 
        src: patroni.service.j2
        dest: "/etc/systemd/system/patroni.service"
        owner: "{{ patroni_user }}"
        group: "{{ patroni_user }}"
        mode: 0775

    - name: Start Patroni service
      ansible.builtin.systemd:
        name: patroni
        state: restarted
      become: yes

    # - name: Run patroni
    #   # ansible.builtin.shell: 'patroni /etc/patroni/patroni.yml &> /var/log/postgresql/patroni.log &'
    #   ansible.builtin.shell: 'whoami'
    #   become_user: '{{ patroni_user }}'
    #   # become_method: su
    #   become: yes

    # - name: Get patroni log
    #   ansible.builtin.shell: 'cat /var/log/postgresql/patroni.log'
    #   register: patroni_run_log
    #   become: yes

    # - name: Print patroni log
    #   ansible.builtin.debug: 
    #     msg: "{{ patroni_run_log }}"